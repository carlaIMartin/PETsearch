// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PETSearch.Data;

#nullable disable

namespace PETSearch.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230326180740_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PETSearch.Models.Animals", b =>
                {
                    b.Property<int>("Animal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Clinic_Id")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Animal_Id");

                    b.HasIndex("Clinic_Id");

                    b.HasIndex("Location");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("PETSearch.Models.Clinics", b =>
                {
                    b.Property<int>("Clinic_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Clinic_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Clinic_Id");

                    b.HasIndex("Location");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("PETSearch.Models.Locations", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Location_Id")
                        .HasColumnType("int");

                    b.HasKey("Location");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("PETSearch.Models.Person", b =>
                {
                    b.Property<int>("Person_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Animal_Id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Person_Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Person_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Person_Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Person_Phone_Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Person_Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Person_Id");

                    b.HasIndex("Animal_Id");

                    b.HasIndex("Location");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PETSearch.Models.Vet", b =>
                {
                    b.Property<int>("Vet_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Clinic_Id")
                        .HasColumnType("int");

                    b.Property<string>("Clinic_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Vet_Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vet_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vet_Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vet_Phone_Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vet_Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Vet_Id");

                    b.HasIndex("Clinic_Id");

                    b.HasIndex("Location");

                    b.ToTable("Vet");
                });

            modelBuilder.Entity("PETSearch.Models.Animals", b =>
                {
                    b.HasOne("PETSearch.Models.Clinics", "Clinics")
                        .WithMany()
                        .HasForeignKey("Clinic_Id");

                    b.HasOne("PETSearch.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("Location");

                    b.Navigation("Clinics");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("PETSearch.Models.Clinics", b =>
                {
                    b.HasOne("PETSearch.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("Location");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("PETSearch.Models.Person", b =>
                {
                    b.HasOne("PETSearch.Models.Animals", "Animals")
                        .WithMany()
                        .HasForeignKey("Animal_Id");

                    b.HasOne("PETSearch.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("Location");

                    b.Navigation("Animals");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("PETSearch.Models.Vet", b =>
                {
                    b.HasOne("PETSearch.Models.Clinics", "Clinics")
                        .WithMany()
                        .HasForeignKey("Clinic_Id");

                    b.HasOne("PETSearch.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("Location");

                    b.Navigation("Clinics");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
